<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>Life - Tag - Shallow and Pedantic</title><link>https://lutzky.net/tags/life/</link><description>Life - Tag - Shallow and Pedantic</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sun, 10 Oct 2021 09:00:00 +0000</lastBuildDate><atom:link href="https://lutzky.net/tags/life/" rel="self" type="application/rss+xml"/><item><title>Newborn parenting software - part 3</title><link>https://lutzky.net/posts/software-parenting-3/</link><pubDate>Sun, 10 Oct 2021 09:00:00 +0000</pubDate><author>Author</author><guid>https://lutzky.net/posts/software-parenting-3/</guid><description><![CDATA[<!-- raw HTML omitted -->
<p>As noted in the <a href="https://lutzky.net/posts/software-parenting-2/" rel="">previous post</a>, I decided that the implementation is more appropriate for a microcontroller than a full-fledged computer. While the Arduino is probably the best-known microcontroller, the standard one doesn&rsquo;t have wifi (the one with wifi is ~$50). The ESP8266, on the other hand, is a microcontroller chip with wifi capabilities, available<sup id="fnref:1"><a href="#fn:1" class="footnote-ref" role="doc-noteref">1</a></sup> on dev boards like the NodeMCU for about $2 apiece - so I bought a few of them. The ESP8266 is sometimes used as a wifi add-on for Arduino, but it&rsquo;s quite capable as a microcontroller on its own (and the newer ESP32 is faster).</p>
<p>So what&rsquo;s the difference between a (very small) computer and a microcontroller? A Raspberry Pi boots off an SD card, usually to a full-fledged Linux operating system; you&rsquo;d operate it either directly with a monitor and keyboard, or connect remotely using SSH. You can install/create software on it as you would on a &ldquo;full-size&rdquo; computer, and I usually do this in Go (although Python is more popular). Conversely, a microcontroller will usually run only one program, which you need to build on a separate computer, connect it over USB to the microcontroller board, and flash it. This has a number of advantages, including simplicity and pretty-much-instant boot.</p>
<p>Coding for the ESP8266 can be done using the same tooling as Arduino - namely, in C++<sup id="fnref:2"><a href="#fn:2" class="footnote-ref" role="doc-noteref">2</a></sup>, on the Arduino IDE. However, during this project I learned of <a href="https://platformio.org/" target="_blank" rel="noopener noreffer ">PlatformIO</a>, which is far more comfortable to work with: It&rsquo;s integrated into VSCode, and git, auto-formatting, autocomplete and <a href="https://marketplace.visualstudio.com/items?itemName=vscodevim.vim" target="_blank" rel="noopener noreffer ">VIM keybindings</a> all work nicely. It also provides a more organized approach to unit testing (practically absent in Arduino IDE) and per-project dependency management (you can list what each project needs and have it auto-install). This made the project fun enough for a few iterations.</p>
<p>One quirk of working with the BabyBuddy API is that reporting a diaper change requires supplying the time of change, even if our intention is &ldquo;right now&rdquo;. That&rsquo;s easy enough on a Linux system, but microcontrollers don&rsquo;t generally have clocks. Thankfully, libraries such as <a href="https://github.com/mcxiaoke/ESPDateTime" target="_blank" rel="noopener noreffer ">ESPDateTime</a> provide NTP support baked right into your program. At this point, the NodeMCU version worked, and replaced the previous implementation:</p>
<figure><a class="lightgallery" href="/posts/software-parenting-3/feature-poobuttons-v2.jpg" title="/posts/software-parenting-3/feature-poobuttons-v2.jpg" data-thumbnail="/posts/software-parenting-3/feature-poobuttons-v2.jpg" data-sub-html="<h2>Poobuttons v2 - nodeMCU on breadboard</h2>">
        
    </a><figcaption class="image-caption">Poobuttons v2 - nodeMCU on breadboard</figcaption>
    </figure>
<p>Indeed, this version fits neatly onto a single (full-sized) breadboard. It&rsquo;s not quite <a href="https://www.youtube.com/watch?v=PE-_rJqvDhQ" target="_blank" rel="noopener noreffer ">Ben Eater</a> grade, but the NodeMCU is pretty good for breadboard mounting, and using solid-core jumpers let me make it much neater than the previous iteration. However, at this point we realized there was a missing feature: We were never quite sure if we had pressed the button, especially if we were performing a diaper change together<sup id="fnref:3"><a href="#fn:3" class="footnote-ref" role="doc-noteref">3</a></sup> . A couple of LEDs can only convey so much information.</p>
<p>I decided to repurpose my <a href="https://lutzky.net/2021/03/14/pitemp/" target="_blank" rel="noopener noreffer ">shitty cardboard LCD case</a> for this project. These tactile buttons have quite short feet - they don&rsquo;t make it through the cardboard, and I insisted on avoiding using a perfboard and soldering iron - as, at the time, I had neither. I ultimately decided to reuse the mini-breadboard from <a href="https://lutzky.net/posts/software-parenting-2/" rel="">the previous version</a>; like many (all?) breadboards, its bottom is an adhesive pad; I didn&rsquo;t even bother to remove the resistors from V1, they add a certain design flare to it. With a few iterations on the UI, it was wife-approved: Custom characters are fully supported in C++ (though, not in Go), so I got nice labels for the tactile buttons, as well as a heartbeat<sup id="fnref:4"><a href="#fn:4" class="footnote-ref" role="doc-noteref">4</a></sup> to indicate that NTP is still working.</p>
<figure><a class="lightgallery" href="/posts/software-parenting-3/poobuttons-v3.jpg" title="/posts/software-parenting-3/poobuttons-v3.jpg" data-thumbnail="/posts/software-parenting-3/poobuttons-v3.jpg" data-sub-html="<h2>Poobuttons v3 - nodeMCU with LCD in cardboard</h2>">
        
    </a><figcaption class="image-caption">Poobuttons v3 - nodeMCU with LCD in cardboard</figcaption>
    </figure>
<p>Overall, the project has been a blast, and the result is everyday-useful. Working on it has made me realize how much I need my own space for late-night electronics projects, but that&rsquo;s a project for another day.</p>
<div class="footnotes" role="doc-endnotes">
<hr>
<ol>
<li id="fn:1">
<p>Actually available - as in, as opposed to Raspberry Pi 0w, they&rsquo;re in stock in many places at the moment.&#160;<a href="#fnref:1" class="footnote-backref" role="doc-backlink">&#x21a9;&#xfe0e;</a></p>
</li>
<li id="fn:2">
<p>Unfortunately, <a href="https://tinygo.org/docs/reference/microcontrollers/nodemcu/" target="_blank" rel="noopener noreffer ">TinyGo does not yet support wifi</a>.&#160;<a href="#fnref:2" class="footnote-backref" role="doc-backlink">&#x21a9;&#xfe0e;</a></p>
</li>
<li id="fn:3">
<p>We call this procedure <a href="https://www.youtube.com/watch?v=BI75uWxEajA" target="_blank" rel="noopener noreffer ">Formula 1</a>.&#160;<a href="#fnref:3" class="footnote-backref" role="doc-backlink">&#x21a9;&#xfe0e;</a></p>
</li>
<li id="fn:4">
<p>2nd row from the bottom, rightmost column; you can see it fading out in this shot. It blinks every second. Although the photo doesn&rsquo;t show it, the LCD&rsquo;s contrast is actually great in-person.&#160;<a href="#fnref:4" class="footnote-backref" role="doc-backlink">&#x21a9;&#xfe0e;</a></p>
</li>
</ol>
</div>
]]></description></item><item><title>Newborn parenting software - part 2</title><link>https://lutzky.net/posts/software-parenting-2/</link><pubDate>Tue, 05 Oct 2021 21:57:09 +0000</pubDate><author>Author</author><guid>https://lutzky.net/posts/software-parenting-2/</guid><description><![CDATA[<!-- raw HTML omitted -->
<p>With BabyBuddy now installed and running properly (see <a href="https://lutzky.net/posts/software-parenting-1/" rel="">previous post</a>), and an always-on display showing the latest information, we now got into the swing of using it. We loved the timeline for &ldquo;what happened while I as sleeping&rdquo;; we loved the food amount reports; and because we had a consistent &ldquo;feed, then change, then wait 15 minutes with baby upright to reduce spit-up&rdquo; system, the display&rsquo;s &ldquo;time since last change&rdquo; box was super useful as well. However, as you might imagine, we did <em>not</em> love handling a freshly-re-diapered baby with one hand while using the other to unlock the phone and navigate to the &ldquo;yes he pooped now&rdquo; page in a web app.</p>
<p>My first idea was to create voice commands for the Nest Home Mini in the room. However, it&rsquo;s prone to misunderstanding us; you have to enunciate, and even then the speech recognition is mostly tuned to preexisting Google Assistant commands, and tends to guess that we aren&rsquo;t really saying words like &ldquo;pee&rdquo; or &ldquo;poo&rdquo;. Furthermore, the baby might be crying, or worse yet - lightly sleeping, at risk of being woken up by our voice (or the assistant&rsquo;s). What we needed was a button (well, two - one for pee and one for poo).</p>
<p>I had a Raspberry Pi ZeroW lying around <a href="https://lutzky.net/posts/pitemp/" rel="">from a previous project</a> and decided to use it for this (the small OLED display wasn&rsquo;t used for this project, but I didn&rsquo;t find a good reason to take it off yet; more on that later). With bits I had from a generic &ldquo;learn electronics&rdquo; kit (which I bought for the specific purpose of having such bits), I created the user interface: Two buttons, a green LED for &ldquo;OK&rdquo;, a red LED for &ldquo;something went wrong&rdquo;; all tied together by some jumper cables and a mini breadboard. The Raspberry Pi would handle communicating with BabyBuddy&rsquo;s API (over wifi), reading the buttons, and driving the LEDs. The setup was indeed quite similar to PiTemp&rsquo;s with the software written in Go, cross-compiled, and run on startup using systemd.</p>
<figure><a class="lightgallery" href="/posts/software-parenting-2/feature-poobuttons-rpi0w.jpg" title="/posts/software-parenting-2/feature-poobuttons-rpi0w.jpg" data-thumbnail="/posts/software-parenting-2/feature-poobuttons-rpi0w.jpg" data-sub-html="<h2>PooButtons on Raspberry Pi ZeroW</h2>">
        
    </a><figcaption class="image-caption">PooButtons on Raspberry Pi ZeroW</figcaption>
    </figure>
<p>One annoying quirk with the Raspberry Pi Zero for this is that it would register phantom button presses; they&rsquo;d be quite rare, fewer than 5 a day, but that&rsquo;s certainly enough to mess up diaper reporting. I&rsquo;m not sure if it&rsquo;s something about the particular GPIO pins I used (GPIO24, GPIO22), and disconnecting the OLED display didn&rsquo;t work. I ended up following the old joke:</p>
<blockquote>
<p>How many software engineers does it take to change a lightbulb?</p>
<p>None, it&rsquo;s a hardware problem.</p>
<p>How many hardware engineers does it take to change a lightbulb?</p>
<p>None, they&rsquo;ll fix it in the software drivers.</p>
</blockquote>
<p>Specifically it ended up looking something like this (with another goroutine listening on the resulting channel):</p>
<div class="highlight"><div class="chroma">
<table class="lntable"><tr><td class="lntd">
<pre tabindex="0" class="chroma"><code><span class="lnt"> 1
</span><span class="lnt"> 2
</span><span class="lnt"> 3
</span><span class="lnt"> 4
</span><span class="lnt"> 5
</span><span class="lnt"> 6
</span><span class="lnt"> 7
</span><span class="lnt"> 8
</span><span class="lnt"> 9
</span><span class="lnt">10
</span><span class="lnt">11
</span><span class="lnt">12
</span><span class="lnt">13
</span><span class="lnt">14
</span><span class="lnt">15
</span><span class="lnt">16
</span><span class="lnt">17
</span><span class="lnt">18
</span><span class="lnt">19
</span><span class="lnt">20
</span><span class="lnt">21
</span><span class="lnt">22
</span><span class="lnt">23
</span><span class="lnt">24
</span><span class="lnt">25
</span><span class="lnt">26
</span><span class="lnt">27
</span><span class="lnt">28
</span><span class="lnt">29
</span><span class="lnt">30
</span><span class="lnt">31
</span><span class="lnt">32
</span><span class="lnt">33
</span><span class="lnt">34
</span><span class="lnt">35
</span><span class="lnt">36
</span><span class="lnt">37
</span><span class="lnt">38
</span><span class="lnt">39
</span><span class="lnt">40
</span><span class="lnt">41
</span><span class="lnt">42
</span></code></pre></td>
<td class="lntd">
<pre tabindex="0" class="chroma"><code class="language-go" data-lang="go"><span class="line"><span class="cl"><span class="kd">const</span> <span class="p">(</span>
</span></span><span class="line"><span class="cl">  <span class="nx">debounceTime</span> <span class="p">=</span> <span class="mi">2</span> <span class="o">*</span> <span class="nx">time</span><span class="p">.</span><span class="nx">Second</span>
</span></span><span class="line"><span class="cl">  <span class="nx">stableTime</span>   <span class="p">=</span> <span class="mi">100</span> <span class="o">*</span> <span class="nx">time</span><span class="p">.</span><span class="nx">Millisecond</span>
</span></span><span class="line"><span class="cl"><span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl"><span class="kd">func</span> <span class="nf">listenButtons</span><span class="p">(</span><span class="nx">ch</span> <span class="kd">chan</span><span class="o">&lt;-</span> <span class="kt">int</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">  <span class="nx">pull</span> <span class="o">:=</span> <span class="nx">gpio</span><span class="p">.</span><span class="nx">PullUp</span>
</span></span><span class="line"><span class="cl">  <span class="nx">edge</span> <span class="o">:=</span> <span class="nx">gpio</span><span class="p">.</span><span class="nx">FallingEdge</span>
</span></span><span class="line"><span class="cl">  <span class="nx">level</span> <span class="o">:=</span> <span class="nx">gpio</span><span class="p">.</span><span class="nx">Low</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">  <span class="k">for</span> <span class="nx">i</span><span class="p">,</span> <span class="nx">pin</span> <span class="o">:=</span> <span class="k">range</span> <span class="p">[]</span><span class="nx">gpio</span><span class="p">.</span><span class="nx">PinIO</span><span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="nx">pinButton1</span><span class="p">,</span>  <span class="c1">// GPIO24
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>    <span class="nx">pinButton2</span><span class="p">,</span>  <span class="c1">// GPIO22
</span></span></span><span class="line"><span class="cl"><span class="c1"></span>  <span class="p">}</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">    <span class="nx">n</span> <span class="o">:=</span> <span class="nx">i</span> <span class="o">+</span> <span class="mi">1</span>
</span></span><span class="line"><span class="cl">    <span class="nx">pin</span> <span class="o">:=</span> <span class="nx">pin</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">    <span class="k">go</span> <span class="kd">func</span><span class="p">()</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">      <span class="k">for</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">        <span class="nx">time</span><span class="p">.</span><span class="nf">Sleep</span><span class="p">(</span><span class="nx">debounceTime</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">        <span class="k">if</span> <span class="nx">err</span> <span class="o">:=</span> <span class="nx">pin</span><span class="p">.</span><span class="nf">In</span><span class="p">(</span><span class="nx">pull</span><span class="p">,</span> <span class="nx">edge</span><span class="p">);</span> <span class="nx">err</span> <span class="o">!=</span> <span class="kc">nil</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">          <span class="nx">log</span><span class="p">.</span><span class="nf">Fatalf</span><span class="p">(</span><span class="s">&#34;Failed to set pin to input: %v&#34;</span><span class="p">,</span> <span class="nx">err</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">        <span class="p">}</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">        <span class="k">if</span> <span class="nx">pin</span><span class="p">.</span><span class="nf">WaitForEdge</span><span class="p">(</span><span class="o">-</span><span class="mi">1</span><span class="p">)</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">          <span class="nx">log</span><span class="p">.</span><span class="nf">Printf</span><span class="p">(</span><span class="s">&#34;Got edge, waiting %v for stability&#34;</span><span class="p">,</span> <span class="nx">stableTime</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">          <span class="nx">time</span><span class="p">.</span><span class="nf">Sleep</span><span class="p">(</span><span class="nx">stableTime</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">
</span></span><span class="line"><span class="cl">          <span class="k">if</span> <span class="nx">pin</span><span class="p">.</span><span class="nf">Read</span><span class="p">()</span> <span class="o">==</span> <span class="nx">level</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">            <span class="nx">log</span><span class="p">.</span><span class="nf">Print</span><span class="p">(</span><span class="s">&#34;Signal was stable, counting as press&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">            <span class="nx">ch</span> <span class="o">&lt;-</span> <span class="nx">n</span>
</span></span><span class="line"><span class="cl">          <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">            <span class="nx">log</span><span class="p">.</span><span class="nf">Print</span><span class="p">(</span><span class="s">&#34;Signal did not remain stable, discarding&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">          <span class="p">}</span>
</span></span><span class="line"><span class="cl">        <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span></span><span class="line"><span class="cl">          <span class="nx">log</span><span class="p">.</span><span class="nf">Print</span><span class="p">(</span><span class="s">&#34;WaitForEdge returned false, ignoring&#34;</span><span class="p">)</span>
</span></span><span class="line"><span class="cl">        <span class="p">}</span>
</span></span><span class="line"><span class="cl">      <span class="p">}</span>
</span></span><span class="line"><span class="cl">    <span class="p">}()</span>
</span></span><span class="line"><span class="cl">  <span class="p">}</span>
</span></span><span class="line"><span class="cl"><span class="p">}</span>
</span></span></code></pre></td></tr></table>
</div>
</div><p>It&rsquo;s not ideal, but it seemed to work; certainly seemed like it should be library code, for someone smarter to debug. Indeed, it turns out that the <code>periph.io</code> library had a <a href="https://pkg.go.dev/periph.io/x/conn/v3@v3.6.8/gpio/gpioutil#Debounce" target="_blank" rel="noopener noreffer ">Debounce function</a> to help with this, but at the time it <a href="https://github.com/periph/conn/issues/5" target="_blank" rel="noopener noreffer ">wasn&rsquo;t implemented at all</a> (and now that I&rsquo;ve spent some time on it, it&rsquo;s partially implemented).</p>
<p>Ultimately, the device worked rather well, and the button pushes were quite satisfying, especially after a particularly nasty diaper change (AKA a poonami). However, it did leave a lot to be desired: The cabling was flimsy and patchy (the pins coming from the ribbon were easy to disconnect), and using a Raspberry Pi here was overkill. Indeed, I ended up using that Raspberry Pi (and OLED display) as a <a href="https://pikvm.org/" target="_blank" rel="noopener noreffer ">PiKVM</a>, and using a microcontroller for the diaper change buttons instead. More on that in the next post.</p>
]]></description></item><item><title>Newborn parenting software - part 1</title><link>https://lutzky.net/posts/software-parenting-1/</link><pubDate>Sun, 03 Oct 2021 17:00:00 +0100</pubDate><author>Author</author><guid>https://lutzky.net/posts/software-parenting-1/</guid><description><![CDATA[<!-- raw HTML omitted -->
<p>A few months ago, I became a father. To help overcome some of the challenges of raising a newborn, I decided to employ my standard MO - software; preferably the kind where I understand what it&rsquo;s doing. It&rsquo;s been working well, and I learned a lot doing it - several blog posts&rsquo; worth, in fact.</p>
<p>For this story to make sense, it bears mentioning that our conditions are pretty much optimal for it: My employer provides a generous parental leave for the non-birth parent; we decided in advance to formula-feed, which allows us to share that load, which means we need to communicate about it; my partner is an early bird whereas I am a night-owl, meaning we essentially have separate shifts necessitating a handoff; and, critically, we&rsquo;re the type of people who <em>like</em> everything being super-organized and scheduled and spreadsheet-y (calms us down, gives us an illusion of control). Furthermore, our baby is remarkably consistent, being hungry right about every 3 hours - so the question we ended up constantly asking (of each other and our phones) was &ldquo;how long since the baby ate&rdquo;.</p>
<p>We knew in advance we&rsquo;d need some sort of a baby tracking app, of which there are <em>many</em>. After some research, I found that few of the free ones are designed to be used from multiple devices (e.g. dad&rsquo;s and mom&rsquo;s phones), which is a hard requirement. We found two contenders: Baby+ and BabyBuddy.</p>
<h2 id="baby">Baby+</h2>
<p><a href="https://philips-digital.com/baby-new/" target="_blank" rel="noopener noreffer ">Baby+</a> is an Android and iPhone app for tracking babies; it follows <a href="https://philips-digital.com/pregnancy-new/" target="_blank" rel="noopener noreffer ">pregnancy+</a>, which we were quite happy with (especially as, before the birth, our responsiveness requirements were looser - I&rsquo;ll get to that). It can track quite a few things, but not Tummy Time for one (in our case it turns out to be pretty important). Like pregnancy+, the design is very aesthetically pleasing, and it regularly shows timely, short, and useful articles for the parents.</p>
<p>While the app does have cloud sync, it doesn&rsquo;t have a web UI (it&rsquo;s phone/tablet-only) nor an open HTTP API for me to reasonably code against. It does have an export function, but it&rsquo;s only really intended for importing by the app itself as backup. It&rsquo;s super-clunky to work with - I know because I ended up using it to perform some analysis with a spreadsheet(&ldquo;how long is the baby going between feeds&rdquo;).</p>
<p>The biggest disadvantage of Baby+ is that it doesn&rsquo;t <em>really</em> support multiple users. From the app&rsquo;s internal FAQ (only available after installing it and setting up an account):</p>
<blockquote>
<p><strong>How can I use this app with my partner?</strong></p>
<p>You can share the app by logging in with the <strong>same email and password</strong>. If you use your device and enter data (e.g. a note) then you need to minimise or close the app for it to send the new data to the server <em>[&hellip;]</em>.</p>
<p><strong>Important</strong>: the app is designed to be used by on person at a a time <em>[&hellip;]</em> otherwise data can be overwritten or deleted. <em>[&hellip;]</em> allow a few mins for the data to sync (the second device should also have the app closed for a few mins at this point so it can fetch the data <em>[&hellip;]</em>).</p>
<p>Please note that you will encounter data loss if you are using the app on two devices at the same time.</p>
</blockquote>
<p>I&rsquo;d guess that the app basically talks to the server on startup, compares timestamps of its entire database, and downloads or uploads the entire database depending on which version is newer. The startup time checks out:</p>
<p>Starting Baby+ on an android phone, after closing it so it syncs, takes about 7 seconds; an eternity in screaming-baby-debug-time. Furthermore, that doesn&rsquo;t include sync time, and old data will be shown for a few more seconds before the sync is complete; that starts off with slight frights (&ldquo;the baby didn&rsquo;t eat for 5 hours?! oh, wait, actually 1 hour&rdquo;), and eventually devolves into distrusting the app.</p>
<p>This felt like a silly problem to have; almost any web-based app would have none of these issues. Furthermore, I thought, there&rsquo;s surely an open-source one where I could fix any annoyances I have myself. Indeed, that would be BabyBuddy.</p>
<h2 id="babybuddy">BabyBuddy</h2>
<p><a href="https://github.com/babybuddy/babybuddy" target="_blank" rel="noopener noreffer ">BabyBuddy</a> is an open-source web app, self-described as &ldquo;to help caregivers track sleep, feedings, diaper changes, and tummy time to learn about and predict baby&rsquo;s needs without (as much) guess work&rdquo;. I describe it as &ldquo;the dumbest-sounding idea ever - sleep-deprived parents of newborns creating and maintaining baby-tracking software as a hobby&rdquo;. It turns out to be wonderful, and is what we use today. It requires self-hosting (but provides a button to do that easily on Heroku), but works remarkably well. It didn&rsquo;t work <em>exactly</em> like I wanted, but that just provided ample opportunity to hack on it.</p>
<p>Before we could use it, I had to make it more mobile-friendly. While it technically worked on phones, it had several usability issues, which I described in <a href="https://github.com/babybuddy/babybuddy/issues/229" target="_blank" rel="noopener noreffer ">#229</a>: horizontal scrolling was needed in places; the &ldquo;Timeline&rdquo; view didn&rsquo;t show a lot of the critical bits of info, requiring more clicks; the contrast was too low for sunlight; and more. Fortunately, through some wonderful collaboration from the author, I was able to quickly get it into a wife-acceptable state and transition us over from Baby+.</p>
<p>As I hacked on the project, I added a <a href="https://gitpod.io" target="_blank" rel="noopener noreffer ">Gitpod</a> <a href="https://github.com/babybuddy/babybuddy/blob/master/.gitpod.yml" target="_blank" rel="noopener noreffer ">config</a> and a link to the README. This allows people to hack on Babybuddy without installing any software whatsoever - everything is done through, essentially, a free tier cloud instance (on which my config will install everything needed) with a browser-builtin VSCode UI. I used this today to whip up <a href="https://github.com/babybuddy/babybuddy/pull/316" target="_blank" rel="noopener noreffer ">another pull request</a>.</p>
<p>In addition to being quick and comfortable to use, BabyBuddy allowed me to set up two integrations that I had in mind. The first is an always-on display, essentially intended as &ldquo;the baby clock&rdquo;. It&rsquo;s positioned by the couch where we usually feed, so it&rsquo;s great as a feeding timer as well. I had started out with an old tablet (Huawei T3 Mediapad) running <a href="https://github.com/thanksmister/wallpanel-android" target="_blank" rel="noopener noreffer ">wallpanel</a> - this is a form of &ldquo;kiosk&rdquo; application, which locks the device into a mode where it always runs the browser on a particular page (the device has no other credentials on it, so it&rsquo;s reasonably safe). The tablet&rsquo;s battery, unfortunately, did <em>not</em> like that - seemingly having the screen on discharges it faster than it can charge, and after a few weeks the tablet refused to charge at all. I&rsquo;ve therefore switched to using an old ASUS C100P Chromebook running <a href="https://chrome.google.com/webstore/detail/kiosk/afhcomalholahplbjhnmahkoekoijban?hl=en" target="_blank" rel="noopener noreffer ">kiosk</a> - this gives the benefit of having a physical keyboard, useful for entering the food amounts.</p>
<p>The second integration I call &ldquo;poobuttons&rdquo; - a couple of tactile buttons on the changing dresser which tell BabyBuddy to mark a diaper (they are labeled &ldquo;poo&rdquo; and &ldquo;pee&rdquo;). This is both easier than fumbling with a phone touchscreen and, frankly, way more satisfying. The next posts will detail the iterations of these buttons and how I built them.</p>
<p>This has been a wonderful and challenging journey so far. I wonder what else I&rsquo;ll find myself building.</p>
]]></description></item><item><title>Reading, writing and vacations</title><link>https://lutzky.net/posts/reading-writing-and-vacation/</link><pubDate>Wed, 27 Mar 2013 18:35:01 +0000</pubDate><author>Author</author><guid>https://lutzky.net/posts/reading-writing-and-vacation/</guid><description><![CDATA[<p>Vacations are a great time for doing that problematic category of things every
management course teaches you about: important, but not urgent. For some
people, it&rsquo;s housework or schoolwork which gets drowned out by day-to-day life.
For others it&rsquo;s keeping up with friends and family. Myself, I also like to
<em>read</em> and <em>write</em>.</p>
<p>Writing, for me, is usually about practical stuff. Sometimes it&rsquo;s simply
<a href="https://github.com/lutzky" target="_blank" rel="noopener noreffer ">code</a> (most of those projects were written on
vacations). Other times, it&rsquo;s writing to this blog (in one of its
incarnations) - which usually has to do with technical tinkering of some sort
or other. It&rsquo;s not that I don&rsquo;t do enough writing in my day job; but there does
tend to be an accumulation of things to write: &ldquo;I should blog about that&rdquo;, &ldquo;I
should write that code&rdquo;, &ldquo;I should try and get my router to do that&rdquo;, and so
forth. When a few days off come by, and I feel that I have enough time to get
more urgent stuff done - it&rsquo;s quite satisfying to be able to dig into that
write-queue.</p>
<p>Reading is the same, but the other way around. I&rsquo;m not talking about standard
RSS feeds (Google Reader R.I.P.), which I usually only have time to skim
through. I mean something pertaining to that: Once in a while, I come across an
article (be it from an RSS feed, a social network, or a news site), which is
too long to read immediately, but I&rsquo;d really like to get into later on, when I
have time. Usually it&rsquo;s text, but sometimes it&rsquo;s a long form video (usually
from a technical conferences such as the recent C++ and Beyond or Google I/O).
Either way, these past few days I&rsquo;ve had the opportunity to take a nice bite
out of my reading queue, with some entries being over a year old. To manage
this queue I use <a href="http://getpocket.com" target="_blank" rel="noopener noreffer ">Pocket</a> (integrates well with Chrome,
Android, Feedly and others), and I highly recommend it.</p>
<p>If you have some time off, enjoy it. Read something. Write something as well.</p>
]]></description></item><item><title>That "Life" category there</title><link>https://lutzky.net/posts/that-life-category-there/</link><pubDate>Fri, 11 Jul 2008 11:58:00 +0000</pubDate><author>Author</author><guid>https://lutzky.net/posts/that-life-category-there/</guid><description><![CDATA[<p>I has it. Sorta.</p>
<p>A few weeks ago, the lovely <a href="http://nanuchka.com" target="_blank" rel="noopener noreffer ">NaNuchKa</a> visited Israel for
two and a half shows (the half-show was warming for Berry Sacharof). &ldquo;Three
shows in two weeks?&rdquo;, people ask - well, yeah. They only come once a year.
Their set is already too long to play <a href="http://youtube.com/watch?v=tn4RITTXkjw" target="_blank" rel="noopener noreffer ">all the songs I
like</a>, and that&rsquo;s actually quite
excellent - new EP and all. Great stuff :) Deep Purple should be coming to
Israel this summer (holy crap!), and I need to see what I can do about getting
tickets for that.</p>
<p>This is my last semester at the Technion - then it&rsquo;s off to the military for
me. Courses for this semester are Electronic Switching Circuits (bleh&hellip;),
Signals and Systems (which is actually turning out to be quite awesome!), and
the neat Compilation Theory. After having thoroughly enjoyed <a href="http://www.cs.technion.ac.il/~biham/" target="_blank" rel="noopener noreffer ">Eli
Biham</a>&rsquo;s excellent Modern Cryptology last
semester, I&rsquo;m visiting (but not taking) his advanced topics course this
semester. I also have two projects: One in computer security, where we mess
with Google, and another in EE, where we try using transactional memory in
order to optimize Apache.</p>
<p>And finally - next week on Thursday, Shlomi Shaban is doing a piano show in
Haifa, just like the good old days. He was supposed to join NaNuchKa for one of
their shows, but had to cancel, so my lovely lady (who introduced me to his
work in the first place) and I haven&rsquo;t been to his shows in quite a while. It
seems that will be able to use the new <a href="http://www.egged.co.il/main.asp?lngCategoryID=6109" target="_blank" rel="noopener noreffer ">200
line</a> - part of a long
overdue project to have cheap public transportation available all night long.</p>
]]></description></item><item><title>Means of control</title><link>https://lutzky.net/posts/means-of-control/</link><pubDate>Mon, 17 Dec 2007 01:47:00 +0000</pubDate><author>Author</author><guid>https://lutzky.net/posts/means-of-control/</guid><description><![CDATA[<p>New URL - not interesting. You&rsquo;d notice by now, as you&rsquo;ve been redirected.
Guess my new E-mail. OpenID - interesting, but I don&rsquo;t have anything
particularily interesting to say about it right now.</p>
<p>This, however, <em>is</em> interesting: &ldquo;<a href="http://www.cracked.com/article_15663_god-fuse-10-things-christians-atheists-can-must-agree-on.html" target="_blank" rel="noopener noreffer ">10 things christians and atheists can (and
must) agree on</a>&rdquo;, a nicely written piece over at cracked.com. But this isn&rsquo;t
blogspam, I&rsquo;ll actually share my two cents. (or
<a href="http://www.shnekel.org/" target="_blank" rel="noopener noreffer ">shnekel</a>, if you like)</p>
<p>I have a serious problem with religion; It is my opinion that it is an overly
powerful means of control. Whether it has evolved as such or not is hard to
tell. But today it seems to pose a very serious threat to the world.</p>
<p>Now, don&rsquo;t get me wrong - control of this type is very important and useful.
Specifically, it manifests itself in a basic moral system which, many believe,
has served mankind well. You know, &ldquo;thou shalt not murder&rdquo;, stuff like that.
Some may even say that it was a central factor in overcoming our primal urges,
and development into the ever-so-slightly more sophisticated society we are
today.</p>
<p>However, there are other, more dangerous manifestations of this control.
Specifically, it seems all-too-easy nowadays to get up and say &ldquo;This-and-that
god has spoken to me - we must kill those-and-them&rdquo;. &ldquo;God has spoken to me, we
must, uh, enlighten these our-religious-character-rejecting
other-religion-followers. There&rsquo;s some oil in it for us, too&rdquo;. &ldquo;This land has
been promised to us this-and-that years ago, we must kill all
other-religion-dwellers&rdquo;.</p>
<p>Of course, the link here is politics. When used as a series of anecdotes,
morals, stories, hell - even as a way of life - religious is mostly harmless.
However, when a religious leader becomes a political figure, the temptation is
simply too great, and religion becomes used as a tool of the agenda. It doesn&rsquo;t
take a whole staff of advisors and a big media budget to convince the public
now - it only takes a proper connection with arbitrary dogma to do that.</p>
<p>Throughout the years, the secular public has wished for separation of church
and state. But noone has yet stated it better than George Carlin - &ldquo;Keep thy
religion (or, in accordance with the linked post, thy lack thereof) to
thyself.&rdquo;</p>
]]></description></item><item><title>Vacation</title><link>https://lutzky.net/posts/vacation/</link><pubDate>Sun, 04 Nov 2007 00:27:00 +0000</pubDate><author>Author</author><guid>https://lutzky.net/posts/vacation/</guid><description><![CDATA[<p>The most recent events in my life which I would consider to be vacations would
be the second Lebanon war and my basic training. I love the Technion, but I
think it&rsquo;s high time for some R&amp;R. With no upcoming tests hovering over my
head, homework pressure low-to-nonexistent, and my girlfriend&rsquo;s birthday
Murphy&rsquo;s-law-bendingly coinciding with her getting some leave, this is a
perfect opportunity to try my hand at a real vacation.</p>
<p>Okay, so it&rsquo;s just two days, but I could hardly ask for anything better. The
location is a Tzimmer recommended by friends and family. My parents have
graciously lent me the car for the purpose. Last but not least, I&rsquo;ve gotten my
hands on some massage oil. :-)</p>
<p>Studying at the Technion can get rather hectic. But hell, I have just one more
year to go, after which I undergo lime-tinted metamorphosis. Perhaps low-key,
nearby, short-term vacations are all I can afford. But with good friends, a
wonderful girlfriend, and a geeky way of getting excited at seemingly mundane
things, I can&rsquo;t complain. Even with EE atrocities in my recent past and, in all
likelihood, my near future, I can&rsquo;t help but wear an annoying smile on my face.</p>
]]></description></item><item><title>Tough Question</title><link>https://lutzky.net/posts/tough-question/</link><pubDate>Tue, 25 Sep 2007 18:29:00 +0000</pubDate><author>Author</author><guid>https://lutzky.net/posts/tough-question/</guid><description>&lt;p>My girlfriend just asked me what just might be the hardest question I&amp;rsquo;ve heard
all semester; What do I like better, The Simpsons or beer?&lt;/p>
</description></item><item><title>Some things make you feel good</title><link>https://lutzky.net/posts/some-things-make-you-feel-good/</link><pubDate>Mon, 23 Jul 2007 00:26:00 +0000</pubDate><author>Author</author><guid>https://lutzky.net/posts/some-things-make-you-feel-good/</guid><description><![CDATA[<p>Some things renew your faith in people, in the time you spend with them.
Amazingly small things, considering their grand scope. Making things worse is
known to be easy, and rebuilding is one of the hardest things we have to do in
life. But sometimes, when things turn out to be completely different than they
seem - new perspective is gained, old perspective is found again, and like
something out of an old Disney cartoon, kitschy clouds of gloom make way for
kitschy rays of sunshine. Complete with the smiling sun and everything. Like
freakin&rsquo; Roger Rabbit :)</p>
<p>Finally, the story gets the ending it deserves.</p>
<p></p>
]]></description></item><item><title>On the matter of a really long vacation</title><link>https://lutzky.net/posts/on-the-matter-of-a-really-long-vacation/</link><pubDate>Tue, 24 Apr 2007 22:14:00 +0000</pubDate><author>Author</author><guid>https://lutzky.net/posts/on-the-matter-of-a-really-long-vacation/</guid><description><![CDATA[<p>By now I&rsquo;ve lost count of how long ago my last class was. The strike has begun
immediately after passover, and is certainly beginning to take its toll. For
one thing, I have no homework deadlines - a rare situation indeed for the
Technion student. Furthermore, contemplations are rising about whether or not
this coming summer semester will be held, as the current semester will most
likely leak into it. This is of special interest to me, as I&rsquo;m behind on my
degree, which is problematic because of my military scholarship. This is
shaping up to be the second time in which, while I&rsquo;ve been authorized by the
military to take a summer semester for completion, I am not able to. However,
one cannot trivially dismiss this strike; in a country which is known worldwide
mostly for its technological exports and frequent bloodbaths, one shouldn&rsquo;t
take the matter of tuition lightly.</p>
<p>The vacation was not, however, boring - I got to spend a lot of time with my
lovely girlfriend, a chance to see friends I have not seen in a long time, and
a lot of posts racked up in various forums. The vacation actually expanded far
enough to contain independence day, so I managed to experience the closest
thing to a hangover I&rsquo;d ever had (But that was some great scotch). Actually,
independence day could have been truly superb; the whole thing got me thinking
about what the perfect night out would be: It&rsquo;s obviously best with my
girlfriend. It would probably start with a rock show of sorts, continue with
food and beer, and end in my girlfriend&rsquo;s bed. Better yet - if I&rsquo;m <em>in</em> the
show. Better still - if there&rsquo;s no reason to get up early the following day.</p>
<p>Another item of interest is that I&rsquo;ve joined a band. Hopefully I&rsquo;ll be able to
keep up the 3-hours-on-Saturday rehearsals. It&rsquo;s a &ldquo;Trash Metal&rdquo; band which has
evidently had really bad experience with bass players. Unfortunately, we seem
to have a <a href="http://myspace.com/switchblade777" target="_blank" rel="noopener noreffer ">myspace page</a>. It looks&hellip;
myspaceish. However, I really think the group has potential, as well as
excellent influences. Furthermore, I&rsquo;m an attention whore :D. Hopefully I&rsquo;ll be
able to help influence the band into more of a heavy-metal direction by
harassing them with melodic basslines.</p>
<p>Very little geek news this time, other than the fact that <a href="http://ubuntu.com" target="_blank" rel="noopener noreffer ">Feisty
Fawn</a> is out. My verdict - get it. It&rsquo;s awesome. Period.
Suspend works much better, NetworkManager is now installed by default, a lot of
things have really been polished, and - can you believe it - Sudoku :)! If you
already run Ubuntu, I&rsquo;d advise against using the update manager - it works, but
it takes a long time, and cannot run unattended. Also, a word of caution to
server admins though - sqlite3 is the new default, so if you have sqlite2
databases you&rsquo;ll need to convert them (use the sqlite and sqlite3 binaries to
do this) - otherwise you&rsquo;ll get &ldquo;file is not a database, or is encrypted&rdquo;
errors.</p>
<p>Whew - that&rsquo;s much better. My thoughts have been depleted into the bits and
bytes before you. I&rsquo;ll just <a href="http://gadial.net" target="_blank" rel="noopener noreffer ">plug a friend&rsquo;s blog</a> and hit
the publish button now ;)</p>
]]></description></item></channel></rss>