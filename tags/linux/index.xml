<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>linux on Shallow and Pedantic</title><link>https://lutzky.net/tags/linux/</link><description>Recent content in linux on Shallow and Pedantic</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sun, 22 Jun 2014 00:00:00 +0000</lastBuildDate><atom:link href="https://lutzky.net/tags/linux/index.xml" rel="self" type="application/rss+xml"/><item><title>Fun with file descriptor leaks</title><link>https://lutzky.net/2014/06/22/fun-with-file-descriptor-leaks/</link><pubDate>Sun, 22 Jun 2014 00:00:00 +0000</pubDate><guid>https://lutzky.net/2014/06/22/fun-with-file-descriptor-leaks/</guid><description>How file descriptor leaks are causing your processes to stick around longer than they should.</description></item><item><title>Multiple library versions</title><link>https://lutzky.net/2013/05/15/multiple-library-versions/</link><pubDate>Wed, 15 May 2013 00:00:00 +0000</pubDate><guid>https://lutzky.net/2013/05/15/multiple-library-versions/</guid><description>Working with vendor code in C can get very tricky, especially when you except breaking changes to occur. Especially when you have multiple binaries depending on that vendor code, updating at different times, necessitating different live versions. Let&amp;rsquo;s explore.
Introduction Assume you&amp;rsquo;re working with an external vendor, who is providing you with code for a wonderful function getFoo:
// foo.h version 1.2.3 int getFoo(); // foo.c version 1.2.3 int getFoo() { sleep(1000); // TODO improve performance return 42 } You use this function in many of your products - for example, in your best-selling barApp application:</description></item><item><title>Timezones are fickle</title><link>https://lutzky.net/2009/04/18/timezones-are-fickle/</link><pubDate>Sat, 18 Apr 2009 00:00:00 +0000</pubDate><guid>https://lutzky.net/2009/04/18/timezones-are-fickle/</guid><description>Creating a manual &amp;ldquo;always-daylight-savings&amp;rdquo; timezone is hard. Let&amp;rsquo;s peek at just how messy timezone logic gets.</description></item><item><title>Automatically starting rtorrent within screen</title><link>https://lutzky.net/2008/11/04/automatically-starting-rtorrent-within-screen/</link><pubDate>Tue, 04 Nov 2008 00:00:00 +0000</pubDate><guid>https://lutzky.net/2008/11/04/automatically-starting-rtorrent-within-screen/</guid><description>These days I don&amp;rsquo;t stay at home often, but I do have an RSS/BitTorrent combo fetching me all kinds of neat stuff for me, so I can have it ready for me on the weekend. I love rtorrent, especially due to the fact that I can run it in screen, ssh home and see how things are doing (or add more torrent to the download). However, sometimes my net connection breaks down, computers gets shut off, or things like that.</description></item><item><title>Quick time tracking hack</title><link>https://lutzky.net/2008/10/26/quick-time-tracking-hack/</link><pubDate>Sun, 26 Oct 2008 00:00:00 +0000</pubDate><guid>https://lutzky.net/2008/10/26/quick-time-tracking-hack/</guid><description>Gnome 2.24 adds a new Time Tracking feature, which I would have found useful. I don&amp;rsquo;t have Gnome 2.24 at work, but I do have a Unix-based operating system&amp;hellip; Here&amp;rsquo;s my new ~/bin/track:
#!/bin/bash date &amp;gt;&amp;gt; ~/time_tracking vim ~/time_tracking + Now, if I could only get vim to automatically hit &amp;ldquo;A&amp;rdquo; and space for me afterwards&amp;hellip; (I&amp;rsquo;m betting there&amp;rsquo;s a way to do it, but AFAIK vim can only receive ex-mode commands as parameters).</description></item><item><title>Deskbar and Firefox 3</title><link>https://lutzky.net/2008/04/28/deskbar-and-firefox-3/</link><pubDate>Mon, 28 Apr 2008 00:00:00 +0000</pubDate><guid>https://lutzky.net/2008/04/28/deskbar-and-firefox-3/</guid><description>Deskbar has a really neat plugin which allows you to search your browsing history and bookmarks. Firefox 3 has switched the storage format to an sqlite-based one. I&amp;rsquo;ve been working on a new plugin to make use of that - so far it&amp;rsquo;s very enjoyable to use :)
Â» Deskbar_FF3</description></item><item><title>Things I learned today</title><link>https://lutzky.net/2008/04/28/things-i-learned-today/</link><pubDate>Mon, 28 Apr 2008 00:00:00 +0000</pubDate><guid>https://lutzky.net/2008/04/28/things-i-learned-today/</guid><description>You can use git on a VFAT disk (for example, a USB key) without all of the annoying mode issues, by using the following setting in .git/config:
[core] filemode = false What I haven&amp;rsquo;t figured out is how to do force a chmod in this situation; for example, if I create a new script, I was hoping to be able to git chmod +x it.
Cream is a very good editor if you&amp;rsquo;re used to Windows applications.</description></item><item><title>Hebrew spell-checking in Pidgin</title><link>https://lutzky.net/2008/04/22/hebrew-spell-checking-in-pidgin/</link><pubDate>Tue, 22 Apr 2008 00:00:00 +0000</pubDate><guid>https://lutzky.net/2008/04/22/hebrew-spell-checking-in-pidgin/</guid><description>This one took me a while to figure out, which is reason enough to post it here.
First of all, you&amp;rsquo;ll need aspell-he, as pidgin uses gtkspell (which, in turn, uses aspell) rather than enchant (which supports hspell). There is a patch for gtkspell which gets it to use enchant, but I don&amp;rsquo;t know of a simple way to get it to work in my distribution of choice, Ubuntu.
Now you need a neat little plugin from the Guifications plugin pack, called SwitchSpell.</description></item><item><title>My alarm clock</title><link>https://lutzky.net/2008/02/12/my-alarm-clock/</link><pubDate>Tue, 12 Feb 2008 00:00:00 +0000</pubDate><guid>https://lutzky.net/2008/02/12/my-alarm-clock/</guid><description>YNet was running a story on how to use your computer as an alarm clock. Here&amp;rsquo;s what I do, for our commandline junkies :)
Here&amp;rsquo;s ~/bin/run_alarm.sh:
#!/bin/bash find ~/music/ -name &amp;#39;*.mp3&amp;#39; -print0 | xargs -0 mplayer -shuffle &amp;amp; MAXVOL=31 TIME=900 for (( i = 0; i &amp;lt;= $MAXVOL; i++ )); do amixer set Master $i &amp;gt; /dev/null; sleep `echo $TIME / $MAXVOL | bc -l` done This basically plays all of my MP3 files, in random order.</description></item><item><title>Grub menu.lst editor</title><link>https://lutzky.net/2007/04/19/grub-menu-lst-editor/</link><pubDate>Thu, 19 Apr 2007 00:00:00 +0000</pubDate><guid>https://lutzky.net/2007/04/19/grub-menu-lst-editor/</guid><description>A lot of people ask me how to change the default operating system booted after installing Linux. The answer they get in Ubuntu&amp;rsquo;s case, &amp;ldquo;Edit /boot/grub/menu.lst, it&amp;rsquo;s self-explanatory&amp;rdquo;, is often unsatisfactory. Attached is the solution :)
Actual script lost in the mists of time&amp;hellip;
Download the file, open a terminal, and run gksudo python grubmenu.py
I&amp;rsquo;ll try and make a package of this soon, so it becomes a menu entry and that much easier to use.</description></item><item><title>Yasmin back up</title><link>https://lutzky.net/2007/04/16/yasmin-back-up/</link><pubDate>Mon, 16 Apr 2007 00:00:00 +0000</pubDate><guid>https://lutzky.net/2007/04/16/yasmin-back-up/</guid><description>Why was it down, you ask? Well, it was out here in the lab, because of a shortage of network ports in the server room. From the acpid log:
[Sun Apr 15 18:53:07 2007] received event &amp;quot;button/power PWRF 00000080 00000001&amp;quot;
That is, at 18:53, someone simply pushed the power button. The server promptly closed all processes and properly shut itself down. I&amp;rsquo;ve moved it into the server room now&amp;hellip;</description></item><item><title>Beautiful ideas</title><link>https://lutzky.net/2007/02/08/beautiful-ideas/</link><pubDate>Thu, 08 Feb 2007 00:00:00 +0000</pubDate><guid>https://lutzky.net/2007/02/08/beautiful-ideas/</guid><description>This man has some beautiful design ideas for the Linux desktop.</description></item><item><title>Pmount-hal + cd</title><link>https://lutzky.net/2007/02/01/pmount-hal-cd/</link><pubDate>Thu, 01 Feb 2007 00:00:00 +0000</pubDate><guid>https://lutzky.net/2007/02/01/pmount-hal-cd/</guid><description>If you&amp;rsquo;re like me, and don&amp;rsquo;t use Gnome or KDE, then you probably use the pmount or pmount-hal applications to mount removable media. Here&amp;rsquo;s a neat thing to add to your .bash_aliases:
function pmh { pmount-hal $1 UDI=`hal-find-by-property --key block.device --string $1` cd &amp;#34;`hal-get-property --udi $UDI--key volume.mount_point`&amp;#34; }</description></item></channel></rss>